name: Pull Request

on:
  pull_request:
    branches:
    - master
    
jobs:
  test:
  
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
      # Устанавливаем докер, чтобы потом запустить в нём centrifugo
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # Устанавливаем питон в окружение
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Устанавливаем зависимости
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # Запускаем линтер
      - name: Static Code Linting with flake8
        run: |
          # останавливаем запуск если есть синтаксические ошибки или неопределённые переменные
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # Устанавливаем контейнер с centrifugo
      - name: Install Centrifugo
        run: |
           docker pull centrifugo/centrifugo:latest
      # Запускаем контейнер
      - name: Run Centrifugo
        run: |
           docker run -d --name centrifugo -p 8000:8000 -v $PWD/centrifugo.json:/centrifugo/config.json centrifugo/centrifugo:latest
      # Устанавливаем memcached
      - name: Setup Memcached
        uses: niden/actions-memcached@v7
      # Запускаем тесты
      - name: Unit Testing with pytest
        env:
          S3_ENDPOINT_URL: '${{ secrets.S3_ENDPOINT_URL }}'
          S3_ACCESS_KEY: '${{ secrets.S3_ACCESS_KEY }}'
          S3_SECRET_KEY: '${{ secrets.S3_SECRET_KEY }}'
          S3_REGION: '${{ secrets.S3_REGION }}'
        run: |
          python -m pytest
      
